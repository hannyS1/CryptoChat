@using CryptoChat.Frontend.Services
@using CryptoChat.Entities

@inject FeatureToggleService FeatureToggleService;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Меню</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Главная
            </NavLink>
        </div>
        @if (UsersModuleEnabled())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users">
                    <span class="oi oi-plus" aria-hidden="true"></span> Пользователи
                </NavLink>
            </div>
        }
        @if (WarehouseModuleEnabled())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="warehouse">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Склад
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="chats">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Чаты
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private List<string> EnabledFeatures = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        EnabledFeatures = await FeatureToggleService.GetEnabledFeatures();
    }

    private bool UsersModuleEnabled()
    {
        return EnabledFeatures.Any(f => f == "UserModuleEnabled");
    }
    
    private bool WarehouseModuleEnabled()
    {
        return EnabledFeatures.Any(f => f == "WarehouseModuleEnabled");
    }

}